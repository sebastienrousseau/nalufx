[package]
# Metadata about the package.
authors = ["NaluFX Contributors"]
categories = ["finance", "command-line-utilities", "data-structures"]
description = """
    A Rust library for optimising cash allocation across complex fund structures using AI-driven predictions and suggestions
"""
documentation = "https://docs.rs/nalufx"
edition = "2021"
exclude = ["/.git/*", "/.github/*", "/.gitignore", "/.vscode/*"]
homepage = "https://rustlogs.com/"
keywords = ["debugging", "log", "nalufx", "logging", "tracing"]
license = "MIT OR Apache-2.0"
name = "nalufx"
repository = "https://github.com/sebastienrousseau/nalufx/"
rust-version = "1.56.0"
version = "0.0.1"
include = [
    "/CONTRIBUTING.md",
    "/LICENSE-APACHE",
    "/LICENSE-MIT",
    "/benches/**",
    "/build.rs",
    "/Cargo.toml",
    "/examples/**",
    "/README.md",
    "/src/**",
    "/tests/**",
]

# [[bench]]
# [[bench]] sections define benchmarks.
# name = "benchmark"
# harness = false
# path = "benches/bench.rs"

[profile.bench]
# Profile for benchmarks.
debug = true

[[example]]
name = "automated_cash_allocation"
path = "examples/services/automated_cash_allocation.rs"

[[example]]
# Description: Analyzes the performance of a bellwether stock and its correlation with the broader market.
name = "bellwether_stock_analysis"
path = "examples/services/bellwether_stock_analysis.rs"

[[example]]
# Description: Optimizes a diversified portfolio of ETFs based on historical performance and risk measures.
name = "diversified_etf_portfolio_optimization"
path = "examples/services/diversified_etf_portfolio_optimization.rs"

[[example]]
# Description: Optimizes a portfolio considering Environmental, Social, and Governance (ESG) factors.
name = "esg_portfolio_optimization"
path = "examples/services/esg_portfolio_optimization.rs"

[[example]]
# Description: Ranks stocks based on various factors such as value, growth, quality, and momentum.
name = "factor_investing_stock_ranking"
path = "examples/services/factor_investing_stock_ranking.rs"

[[example]]
# Description: Fetches historical stock data from a financial data provider API.
name = "fetch_stock_data"
path = "examples/services/fetch_stock_data.rs"

[[example]]
# Description: Generates a comprehensive report for a given investment portfolio.
name = "generate_portfolio_report"
path = "examples/services/generate_portfolio_report.rs"

[[example]]
# Description: Implements the Mean-Variance Optimization (MVO) algorithm for portfolio allocation.
name = "mean_variance_optimization"
path = "examples/services/mean_variance_optimization.rs"

[[example]]
# Description: Optimizes a portfolio using the Risk Parity approach, balancing risk contributions across assets.
name = "risk_parity_portfolio_optimization"
path = "examples/services/risk_parity_portfolio_optimization.rs"

[[example]]
# Description: Calculates various technical analysis indicators for a given stock or financial instrument.
name = "technical_analysis_indicators"
path = "examples/services/technical_analysis_indicators.rs"

[dependencies]
# Dependencies are only used for building.
actix-web = "4.6.0"
augurs-ets = "0.1.2"
chrono = "0.4.38"
csv = "1.3.0"
dotenvy = "0.15.7"
env_logger = "0.11.3"
figlet-rs = "0.1.5"
futures = "0.3.30"
linfa = "0.7.0"
linfa-clustering = "0.7.0"
log = "0.4.21"
nalgebra = "0.32.5"
ndarray = "0.15.6"
ndarray-stats = "0.5.1"
rand = "0.8.5"
reqwest = { version = "0.12.4", features = ["json"] }
serde = { version = "1.0.203", features = ["derive"] }
serde_json = "1.0.117"
thiserror = "1.0.61"
time = "0.3.36"
tokio = { version = "1.38.0", features = ["full"] }
tokio-test = "0.4.4"
yahoo_finance_api = "2.1.0"

[build-dependencies]
version_check = "0.9.4"

[dev-dependencies]
# Development dependencies are only used for testing and building.
# criterion = "0.5.1"
actix-rt = "2.9.0"
lazy_static = "1.4.0"
wiremock = "0.6.0"

[lib]
# Library configuration.
crate-type = ["lib"]
name = "nalufx"
path = "src/lib.rs"

[features]
# No default features
default = []

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]
rustdoc-args = ["--generate-link-to-definition"]

# Linting config
[lints.rust]

## Warn
# box_pointers = "warn"
missing_copy_implementations = "warn"
missing_docs = "warn"
unstable_features = "warn"
# unused_crate_dependencies = "warn"
unused_extern_crates = "warn"
unused_results = "warn"

## Allow
bare_trait_objects = "allow"
elided_lifetimes_in_paths = "allow"
non_camel_case_types = "allow"
non_upper_case_globals = "allow"
trivial_bounds = "allow"
unsafe_code = "allow"

## Forbid
missing_debug_implementations = "forbid"
non_ascii_idents = "forbid"
unreachable_pub = "forbid"

## Deny
dead_code = "deny"
deprecated_in_future = "deny"
ellipsis_inclusive_range_patterns = "deny"
explicit_outlives_requirements = "deny"
future_incompatible = { level = "deny", priority = -1 }
keyword_idents = "deny"
macro_use_extern_crate = "deny"
meta_variable_misuse = "deny"
missing_fragment_specifier = "deny"
noop_method_call = "deny"
pointer_structural_match = "deny"
rust_2018_idioms = { level = "deny", priority = -1 }
rust_2021_compatibility = { level = "deny", priority = -1 }
single_use_lifetimes = "deny"
trivial_casts = "deny"
trivial_numeric_casts = "deny"
unused = { level = "deny", priority = -1 }
unused_features = "deny"
unused_import_braces = "deny"
unused_labels = "deny"
unused_lifetimes = "deny"
unused_macro_rules = "deny"
unused_qualifications = "deny"
variant_size_differences = "deny"

[package.metadata.clippy]
warn-lints = [
    "clippy::all",
    "clippy::pedantic",
    "clippy::cargo",
    "clippy::nursery",
]

[profile.dev]
codegen-units = 256
debug = true
debug-assertions = true
incremental = true
lto = false
opt-level = 0
overflow-checks = true
panic = 'unwind'
rpath = false
strip = false

[profile.release]
codegen-units = 1
debug = false
debug-assertions = false
incremental = false
lto = true
opt-level = "s"
overflow-checks = false
panic = "abort"
rpath = false
strip = "symbols"

[profile.test]
codegen-units = 256
debug = true
debug-assertions = true
incremental = true
lto = false
opt-level = 0
overflow-checks = true
rpath = false
strip = false
