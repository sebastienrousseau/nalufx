

import { BalanceAdapter } from "balance.slint";
import { OverviewAdapter } from "overview.slint";
import { Page } from "page.slint";
import { StocksAdapter } from "stocks.slint";
import { UsageAdapter } from "insight.slint";
import { GroupBox, Value, ValueDisplay, BarChart, BarTileModel, Tile, BarTiles, BalanceChart } from "../widgets/widgets.slint";


export component ValueTile {
    in property <string> title <=> i-group-box.title;
    in property <[Value]> model <=> i-value-display.model;
    in property <bool> alternative-colors <=> i-value-display.alternative-colors;
    in property <bool> active;

    i-group-box := GroupBox {
        preferred-width: 100%;
        preferred-height: 100%;

        i-value-display := ValueDisplay {
            active: root.active;
        }
    }
}

export component BarChartTile {
    in property <string> title <=> i-group-box.title;
    in property <[Value]> value-model <=> i-value-display.model;
    in property <[float]> model <=> i-bar-chart.model;
    in property <float> min <=> i-bar-chart.min;
    in property <float> max <=> i-bar-chart.max;
    in property <bool> active;

    height: i-group-box.min-height;

    i-group-box := GroupBox {
        preferred-width: 100%;
        min-height: 124px;

        i-value-display := ValueDisplay {
            width: 100%;
            alternative-colors: true;
            active: root.active;
            vertical: true;
        }

        i-bar-chart := BarChart {
            horizontal-stretch: 1;
        }
    }
}

export component StocksTile {
    in property <string> title <=> i-group-box.title;

    i-group-box := GroupBox {
        spacing: 1px;
        i-tile := Tile { }
    }
}

export component BalanceTile {
    in property <[string]> x-axis-model;
    in property <[int]> y-axis-model;
    in property <[float]> model;
    in property <float> min;
    in property <float> max;
    in property <string> y-unit;
    in property <string> title;

    GroupBox {
        title: root.title;

        BalanceChart {
            x-axis-model: root.x-axis-model;
            y-axis-model: root.y-axis-model;
            model: root.model;
            min: root.min;
            max: root.max;
            y-unit: root.y-unit;
        }
    }
}

export component Dashboard inherits Page {
    GridLayout {
        padding-left: 20px;
        padding-right: 20px;
        padding-top: 20px;
        padding-bottom: 60px;
        spacing: 20px;

        Row {
            ValueTile {
                title: OverviewAdapter.funds-title;
                model: OverviewAdapter.funds-model;
                active: root.active;
            }

            ValueTile {
                title: OverviewAdapter.transactions-title;
                model: OverviewAdapter.transactions-model;
                alternative-colors: true;
                active: root.active;
            }
        }

        Row {
            BalanceTile {
                x-axis-model <=> BalanceAdapter.x-axis-model;
                y-axis-model <=> BalanceAdapter.y-axis-model;
                model <=> BalanceAdapter.model;
                min <=> BalanceAdapter.min;
                max <=> BalanceAdapter.max;
                y-unit <=> BalanceAdapter.y-unit;
                title <=> BalanceAdapter.title;
            }
        }

        Row {
            BarChartTile {
                colspan: 2;
                title: UsageAdapter.title;
                model: UsageAdapter.model;
                min: UsageAdapter.min;
                max: UsageAdapter.max;
                value-model: UsageAdapter.overview-model;
                active: root.active;
            }
        }

        Row {
            StocksTile {
                colspan: 2;
                title: StocksAdapter.title;
            }
        }
    }
}
