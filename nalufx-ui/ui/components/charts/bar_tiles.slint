import { NalufxTheme } from "../../components/themes/index.slint";
import { BarBackground } from "bar_chart.slint";

/// Represents the model for a single bar tile
export struct BarTileModel {
    /// Title of the bar tile
    title: string,
    /// Icon for the bar tile
    icon: image,
    /// Maximum value of the bar
    max: int,
    /// Minimum value of the bar
    min: int,
    /// Absolute minimum value for scaling
    absolute-min: int,
    /// Absolute maximum value for scaling
    absolute-max: int,
    /// Unit of measurement
    unit: string,
}

/// Component for displaying a value label with a unit
component ValueLabel {
    /// The text value to display
    in property <string> text;
    /// The unit of measurement
    in property <string> unit;

    HorizontalLayout {
        Text {
            color: NalufxTheme.palette.labelColor;
            vertical-stretch: 0;
            horizontal-alignment: right;
            text: root.text;
            font-size: NalufxTheme.typography.description-light.size.desktop;
            font-weight: NalufxTheme.typography.description-light.weight;
        }
        Text {
            color: NalufxTheme.palette.labelColor;
            vertical-stretch: 0;
            horizontal-alignment: left;
            text: root.unit;
            font-size: NalufxTheme.typography.description-light.size.desktop;
            font-weight: NalufxTheme.typography.description-light.weight;
        }
    }
}

/// Component representing a single bar tile
component BarTile {
    /// Title of the bar tile
    in property <string> title <=> i-title.text;
    /// Icon for the bar tile
    in property <image> icon <=> i-icon.source;
    /// Maximum value of the bar
    in property <float> max;
    /// Minimum value of the bar
    in property <float> min;
    /// Unit of measurement
    in property <string> unit;
    /// Absolute minimum value for scaling
    in property <float> absolute-min;
    /// Absolute maximum value for scaling
    in property <float> absolute-max;

    HorizontalLayout {
        alignment: center;
        VerticalLayout {
            spacing: 7px;
            i-title := Text {
                color: NalufxTheme.palette.labelColor;
                vertical-stretch: 0;
                horizontal-alignment: center;
                font-size: NalufxTheme.typography.description-light.size.desktop;
                font-weight: NalufxTheme.typography.description-light.weight;
            }
            i-icon := Image {
                height: 20px;
                vertical-stretch: 0;
            }
            ValueLabel {
                text: floor(max);
                unit: unit;
            }
            Rectangle {
                private property <int> range: root.absolute-max - root.absolute-min;
                private property <length> max-y: self.height * (root.max - root.absolute-min) / range;
                private property <length> min-y: self.height * (root.min - root.absolute-min) / range;
                vertical-stretch: 1;
                HorizontalLayout {
                    alignment: center;
                    y: parent.height - max-y;
                    height: max-y - min-y;
                    Rectangle {
                        min_width: 12px;
                        border-radius: 6px;
                        background: NalufxTheme.gradients.secondary-gradient;
                    }
                }
            }
            ValueLabel {
                text: floor(min);
                unit: unit;
            }
        }
    }
}

/// Component for displaying multiple bar tiles
export component BarTiles {
    /// Model containing data for all bar tiles
    in property <[BarTileModel]> model;
    /// Whether the component is in active state
    in property <bool> active;

    horizontal-stretch: 1;
    vertical-stretch: 1;

    BarBackground {}

    HorizontalLayout {
        padding-right: 18px;
        padding-left: 18px;
        padding-top: 11px;
        padding-bottom: 11px;

        for tile in model : BarTile {
            private property <float> display-max: tile.max;
            horizontal-stretch: 1;
            title: tile.title;
            icon: tile.icon;
            min: tile.min;
            absolute-min: tile.absolute-min;
            absolute-max: tile.absolute-max;
            unit: tile.unit;

            states [
                active when active : {
                    max: display-max;
                    in {
                        animate max { duration: NalufxTheme.durations.slow; easing: cubic-bezier(0, 0, 0, 1); }
                    }
                }
            ]
        }
    }
}