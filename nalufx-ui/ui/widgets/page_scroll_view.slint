import { FloatButton } from "../components/button/float_button.slint";
import { Images } from "../images.slint";
import { NalufxTheme } from "../components/themes/index.slint";

/// Represents a custom scrollbar component
component ScrollBar {
    private property <length> ref-width: self.width - 4px;

    /// Size of the visible portion of the scrollable content
    in-out property <length> page-size;
    /// Current scroll position
    in-out property <length> value;
    /// Maximum scrollable length
    in-out property <length> maximum;
    /// Whether the scrollbar is interactive
    in property <bool> enabled <=> i-ta.enabled;

    min-height: 14px;

    Rectangle {
        border-width: 1px;
        border-radius: 10px;
        border-color: NalufxTheme.palette.primary;

        i-indicator := Rectangle {
            x: 2px + (root.ref-width - i-indicator.width) * (-root.value / root.maximum);
            height: parent.height;
            background: NalufxTheme.palette.primary;
            width: max(32px, ref-width * root.page-size / (root.maximum + root.page-size));
            border-radius: parent.border-radius - 2px;
        }
    }

    i-ta := TouchArea {
        property <length> pressed-value;

        width: parent.width;
        height: parent.height;

        pointer-event(event) => {
            if (event.button == PointerEventButton.left && event.kind == PointerEventKind.down) {
                self.pressed-value = -root.value;
            }
        }
        moved => {
            if (self.enabled && self.pressed) {
                root.value = -max(0px, min(root.maximum, self.pressed-value + (
                   (self.mouse-x - self.pressed-x) * (root.maximum / (root.width - i-indicator.width))
                )));
            }
        }
    }
}

/// Represents a container for a page in the scroll view
export component PageContainer {
    /// Callback for when the container is clicked
    callback clicked <=> i-touch-area.clicked;

    /// Whether the background should be transparent
    in property <bool> transparent-background: true;
    /// X-coordinate of the mouse within the container
    out property <length> mouse-x: i-touch-area.mouse-x;

    /// Index of the currently selected page
    in property <int> selected;
    /// Index of this page container
    in property <int> index;
    /// Height of the selected page
    in property <length> selected-height;
    /// Width of the selected page
    in property <length> selected-width;
    /// Horizontal offset of the selected page
    in property <length> selected-h-offset;

    min-width: 320px;
    min-height: 240px;
    cache-rendering-hint: true;

    i-rect := Rectangle {
        height: parent.height;
        animate opacity { duration: NalufxTheme.durations.medium; }

        i-touch-area := TouchArea {}

        Rectangle {
            border-width: 2px;
            border-radius: 10px;
            border-color: NalufxTheme.palette.transparent;
            background: NalufxTheme.palette.black;
            opacity: root.transparent-background ? 0.33 : 0.66;
        }

        Rectangle {
            y: 10px;
            height: i-rect.height - 20px;

            @children
        }
    }

    states [
        selected when selected == index : {
            min-width: selected-width;
            i-rect.height: selected-height;
            i-rect.y: (self.height - selected-height) /2 + selected-h-offset;
            out { animate i-rect.y, i-rect.height { duration: NalufxTheme.durations.medium; } }
            in { animate i-rect.y, i-rect.height { duration: NalufxTheme.durations.medium; } }
            cache-rendering-hint: false;
        }
        shrink when selected != -1 : {
            horizontal-stretch: 0;
            i-rect.opacity: 0.0;
        }
    ]

    animate min-width { duration: NalufxTheme.durations.medium; }
}

/// Represents a scrollable view containing multiple pages
export component PageScrollView {
    /// Number of pages in the scroll view
    in property <int> page-count: 1;
    /// Index of the currently selected page
    out property <int> selection: -1;
    /// Height of the selected page
    out property <length> selected-height : root.height - i-layout.spacing;
    /// Width of the selected page
    out property <length> selected-width: i-flickable.width - i-layout.spacing * 2;
    /// Horizontal offset of the selected page
    out property <length> selected-h-offset:  (root.height - i-flick-container.height)/2;
    private property <length> item-width: i-flickable.viewport-width / page-count;
    private property <length> saved-item-width: item-width;

    /// Toggles the selection state of a page
    public function toggle-selection(idx: int, x: length) {
        if (selection >= 0) {
            i-flickable.viewport-x = min(0px, max(i-flickable.width - saved-item-width * page-count , -x + i-flickable.width / 2 - saved-item-width / 2));
            selection = -1;
        } else {
            saved-item-width = item-width;
            selection = idx;
            i-flickable.viewport-x = -x + i-layout.spacing;
        }
    }

    /// Scrolls the view to the left
    function scroll-left() {
        i-flickable.viewport-x = min(i-flickable.viewport-x + item-width, 0);
    }

    /// Scrolls the view to the right
    function scroll-right() {
        i-flickable.viewport-x = max(i-flickable.viewport-x - item-width,  i-flickable.width - i-flickable.viewport-width);
    }

    VerticalLayout {
        i-flick-container := Rectangle {
            z: 1;
            i-flickable := Flickable {
                y: 0;
                height: selection == -1 ? parent.height : selected-height ;
                animate viewport-x { duration: NalufxTheme.durations.medium;  }
                viewport-height: i-flickable.height;
                i-layout := HorizontalLayout {
                    y: (i-flick-container.height - self.height)/2;
                    height: i-layout.preferred-height;
                    width:  i-layout.preferred-width;
                    padding: 20px;
                    spacing: 20px;

                    @children
                }
                interactive: selection == -1;
            }
        }

        HorizontalLayout {
            vertical-stretch: 0;
            spacing: 25px;
            padding-left: 25px;
            padding-right: 25px;
            opacity: selection != -1 ? 0 : 1;
            animate opacity { duration: NalufxTheme.durations.medium; }

            FloatButton {
                visible: i-flickable.viewport-x < 0;
                horizontal-stretch: 0;
                icon: Images.arrow-left;
                enabled: selection == -1;

                clicked => {
                    scroll-left();
                }
            }

            VerticalLayout {
                alignment: center;
                horizontal-stretch: 1;

                ScrollBar {
                    maximum: i-flickable.viewport-width - i-flickable.width;
                    page-size: i-flickable.width;
                    value <=> i-flickable.viewport-x;
                    enabled: selection == -1;
                }
            }

            FloatButton {
                visible: i-flickable.viewport-x > i-flickable.width - i-flickable.viewport-width;
                horizontal-stretch: 0;
                icon: Images.arrow-right;
                enabled: selection == -1;

                clicked => {
                    scroll-right();
                }
            }
        }
    }
}
