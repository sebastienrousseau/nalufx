[package]
# Metadata about the package.
name = "nalufx-core" # The name of the package.
description = "A Rust library for easy multi-LLM interactions and model selection." # A short description of the package.
include = ["src/**/*", "README.md"] # Files to include when publishing the package.

# The following metadatas are inherited from the workspace.
# default-run = "nfx" # The default binary to run when using `cargo run`.
version.workspace = true # The version is defined in the workspace.
authors.workspace = true # Authors are defined in the workspace.
build = "build.rs" # The build script is defined in the workspace.
edition.workspace = true # The edition is defined in the workspace.
exclude.workspace = true # Files to exclude are defined in the workspace.
license.workspace = true # The license is defined in the workspace.
rust-version.workspace = true # The Rust version is defined in the workspace.
categories.workspace = true # Categories are defined in the workspace.
repository.workspace = true # The repository URL is defined in the workspace.
homepage.workspace = true # The homepage URL is defined in the workspace.

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# Dependencies for the package.
nalufx-llms = { path = "../nalufx-llms" , version = "0.0.1" }

actix-web = "4.8.0"
async-trait = "0.1.80"
augurs-ets = "0.9.0"
chrono = "0.4.38"
csv = "1.3.0"
dotenvy = "0.15.7"
env_logger = "0.11.3"
figlet-rs = "0.1.5"
futures = "0.3.30"
linfa = "0.7.0"
linfa-clustering = "0.7.0"
log = "0.4.21"
nalgebra = "0.32.6"
ndarray = "0.15.6"
ndarray-stats = "0.5.1"
printpdf = "0.7.0"
rand = "0.8.5"
reqwest = { version = "0.12.5", features = ["json"] }
serde = { version = "1.0.204", features = ["derive"] }
serde_json = "1.0.120"
textplots = "0.8.6"
thiserror = "1.0.63"
time = "0.3.36"
tokio = { version = "1.39.1", features = ["full"] }
tokio-test = "0.4.4"
yahoo_finance_api = "2.2.1"

[build-dependencies]
# Dependencies for build scripts.
version_check = "0.9.4"

[dev-dependencies]
# Dependencies for development and testing.
actix-rt = "2.10.0"
lazy_static = "1.4.0"
wiremock = "0.6.0"
# Uncomment if you use Criterion for benchmarking.
# criterion = "0.5.1"

[features]
# Optional features for the package.
default = []

[lib]
# Library configuration.
crate-type = ["lib"]
name = "nalufx"
path = "src/lib.rs"

[[example]]
# Examples are small programs to demonstrate how to use your crate.
name = "automated_cash_allocation"
path = "examples/services/automated_cash_allocation.rs"

[[example]]
name = "bellwether_stock_analysis"
path = "examples/services/bellwether_stock_analysis.rs"

[[example]]
name = "diversified_etf_portfolio_optimization"
path = "examples/services/diversified_etf_portfolio_optimization.rs"

[[example]]
name = "esg_portfolio_optimization"
path = "examples/services/esg_portfolio_optimization.rs"

[[example]]
name = "factor_investing_stock_ranking"
path = "examples/services/factor_investing_stock_ranking.rs"

[[example]]
name = "fetch_stock_data"
path = "examples/services/fetch_stock_data.rs"

[[example]]
name = "generate_portfolio_report"
path = "examples/services/generate_portfolio_report.rs"

[[example]]
name = "mean_variance_optimization"
path = "examples/services/mean_variance_optimization.rs"

[[example]]
name = "risk_parity_portfolio_optimization"
path = "examples/services/risk_parity_portfolio_optimization.rs"

[[example]]
name = "technical_analysis_indicators"
path = "examples/services/technical_analysis_indicators.rs"

[package.metadata.docs.rs]
# Metadata for docs.rs.
targets = ["x86_64-unknown-linux-gnu"]
rustdoc-args = ["--generate-link-to-definition"]

[lints.rust]
# Linting configuration.
## Warn
missing_copy_implementations = "warn"
missing_docs = "warn"
unstable_features = "warn"
unused_extern_crates = "warn"
unused_results = "warn"

## Allow
bare_trait_objects = "allow"
elided_lifetimes_in_paths = "allow"
non_camel_case_types = "allow"
non_upper_case_globals = "allow"
trivial_bounds = "allow"
unsafe_code = "allow"

## Forbid
missing_debug_implementations = "forbid"
non_ascii_idents = "forbid"
unreachable_pub = "forbid"

## Deny
dead_code = "deny"
deprecated_in_future = "deny"
ellipsis_inclusive_range_patterns = "deny"
explicit_outlives_requirements = "deny"
future_incompatible = { level = "deny", priority = -1 }
keyword_idents = "deny"
macro_use_extern_crate = "deny"
meta_variable_misuse = "deny"
missing_fragment_specifier = "deny"
noop_method_call = "deny"
rust_2018_idioms = { level = "deny", priority = -1 }
rust_2021_compatibility = { level = "deny", priority = -1 }
single_use_lifetimes = "deny"
trivial_casts = "deny"
trivial_numeric_casts = "deny"
unused = { level = "deny", priority = -1 }
unused_features = "deny"
unused_import_braces = "deny"
unused_labels = "deny"
unused_lifetimes = "deny"
unused_macro_rules = "deny"
unused_qualifications = "deny"
variant_size_differences = "deny"

[package.metadata.clippy]
# Clippy linting configuration.
warn-lints = [
    "clippy::all",
    "clippy::pedantic",
    "clippy::cargo",
    "clippy::nursery",
]
